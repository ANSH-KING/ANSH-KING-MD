const {readEnv} = require('../lib/database')
const {cmd , commands} = require('../command')

cmd({
    pattern: "menu",
    react: "üçÇ",
    desc: "get cmd list",
    category: "main",
    filename: __filename
},
async(conn, mek, m,{from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply}) => {
try{
const config = await readEnv();
let menu = {
main: '',
download: '',
group: '',
owner: '',
convert: '',
search: ''
};

for (let i = 0; i < commands.length; i++) {
if (commands[i].pattern && !commands[i].dontAddCommandList) {
menu[commands[i].category] += `‚û∫${commands[i].pattern}\n`;
 }
}

let madeMenu = `üê¨ * ú·¥á ü ü·¥è ${pushname}*
‚ú® *Welcome to ${botname}* ‚ú®üåü
‚ï≠‚îÅ‚îÅ‚îÅ‚ä± üë§ *USER* üë§ ‚ä±‚îÅ‚îÅ‚îÅ‚ïÆ
üñãÔ∏è *Name:* _%name_
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ

‚ï≠‚îÅ‚îÅ‚îÅ‚ä± üåê *INFO* üåê ‚ä±‚îÅ‚îÅ‚îÅ‚ïÆ
‚õëÔ∏è *Mode:* _%mode_
üì± *Platform:* _%platform_
üíª *Type:* _NodeJs_
üõ°Ô∏è *Baileys:* _Multi Device_
üîë *Prefix:* [ *%_p* ]
‚è≥ *Uptime:* _%muptime_
üíæ *Database:* _%totalreg_
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ
> *‚ùÇ·¥Ö·¥è·¥°…¥ ü·¥è·¥Ä·¥Ö ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös‚ùÇ*

${menu.download}

> *‚ùÇ·¥ç·¥Ä…™…¥ ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös‚ùÇ*

${menu.main}

> *‚ùÇ…¢ Ä·¥è·¥ú·¥ò ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös‚ùÇ*

${menu.group}

> *‚ùÇ·¥è·¥°…¥·¥á Ä ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös‚ùÇ*

${menu.owner}

> *‚ùÇ·¥Ñ·¥è…¥·¥†·¥á Ä·¥õ ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös‚ùÇ*

${menu.convert}

> *‚ùÇs·¥á·¥Ä Ä·¥Ñ ú ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös‚ùÇ*

${menu.search}

·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è s…™ ü·¥á…¥·¥õ_ ü·¥è·¥†·¥á Ä‚Å¥¬≥¬≤
`

await conn.sendMessage(from,{image:{url:config.ALIVE_IMG},caption:madeMenu},{quoted:mek})

}catch(e){
console.log(e)
reply(`${e}`)
}
})
